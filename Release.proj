<?xml version="1.0"?>
<Project ToolsVersion="4.0" DefaultTargets="Help" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <GitHubUser>git-tfs</GitHubUser>
    <GitHubProject>git-tfs</GitHubProject>
    <OriginUrl>https://github.com/$(GitHubUser)/$(GitHubProject).git</OriginUrl>
    <SolutionDir>.</SolutionDir>
    <BuildDir>$(SolutionDir)/GitTfs/bin/Release</BuildDir>
    <PackagedDir>$(SolutionDir)/Releases</PackagedDir>
    <TargetPlatform>AnyCPU</TargetPlatform>
    <TargetPlatform Condition="Exists('$(SolutionDir)/GitTfs.Vs2008/GitTfs.Vs2008.csproj')">x86</TargetPlatform>
    <VersionFilePath>$(SolutionDir)\Version.cs</VersionFilePath>
    <PackageFile>GitTfs-$(Version).zip</PackageFile>
    <Archive>$(PackagedDir)/$(PackageFile)</Archive>
    <WebSiteDir>.\git-tfs.github.com</WebSiteDir>
    <Authentication>--user $(User)</Authentication><!-- -H %22Authorization: token PUT_OAUTH_KEY_HERE%22 -->
  </PropertyGroup>

  <PropertyGroup>
    <PackagesConfig>$(SolutionDir)/.nuget/packages.config</PackagesConfig>
    <RequireRestoreConsent>false</RequireRestoreConsent>
    <MSBuildCommunityTasksPath>$(SolutionDir)/packages/MSBuildTasks.1.4.0.45/tools</MSBuildCommunityTasksPath>
    <MSBuildCommunityTasksLib>$(MSBuildCommunityTasksPath)/MSBuild.Community.Tasks.dll</MSBuildCommunityTasksLib>
  </PropertyGroup>
  <Import Project="$(SolutionDir)/.nuget/nuget.targets" />

  <Target Name="MSBuildCommunityTasks" DependsOnTargets="RestorePackages" />
  <UsingTask AssemblyFile="$(MSBuildCommunityTasksLib)" TaskName="MSBuild.Community.Tasks.TemplateFile" />
  <UsingTask AssemblyFile="$(MSBuildCommunityTasksLib)" TaskName="MSBuild.Community.Tasks.Zip" />
  <UsingTask AssemblyFile="$(MSBuildCommunityTasksLib)" TaskName="MSBuild.Community.Tasks.FileUpdate" />

  <Target Name="Help">
    <ReadLinesFromFile File="Releasing.md">
      <Output TaskParameter="Lines" ItemName="DeployInstructions"/>
    </ReadLinesFromFile>
    <Message Text="@(DeployInstructions->'%(Identity)','%0a%0d')" />
  </Target>

  <Target Name="Release" DependsOnTargets="UpdateVersion; Build; TagSource; PushSource; Package; GitHubRelease;">
  </Target>

  <Target Name="Build">
    <MSBuild Projects="GitTfs.sln" Targets="Rebuild" Properties="Configuration=Release;Platform=$(TargetPlatform);WarningLevel=0" />
  </Target>

  <ItemGroup>
    <ReleaseFiles Include="$(SolutionDir)\README.md" />
    <ReleaseFiles Include="$(SolutionDir)\LICENSE" />
    <ReleaseFiles Include="$(SolutionDir)\NOTICE" />
    <ReleaseFiles Include="$(BuildDir)\git-tfs.exe" />
    <ReleaseFiles Include="$(BuildDir)\*.config" />
    <ReleaseFiles Include="$(BuildDir)\*.dll" Exclude="$(BuildDir)\Microsoft.*.dll" />
    <ReleaseFiles Include="$(BuildDir)\NativeBinaries\**\*.dll" />
  </ItemGroup>
  <Target Name="Package" DependsOnTargets="MSBuildCommunityTasks">
    <Zip Files="@(ReleaseFiles)" ZipFileName="$(Archive)" WorkingDirectory="$(BuildDir)" />
  </Target>

  <Target Name="UpdateVersion">
    <Error Text="You should specify a version number!" Condition="'$(Version)' == ''" />
    <WriteLinesToFile File="$(VersionFilePath)" Lines="partial class GitTfsProperties ; { ; public const string Version = %22$(Version)%22%3B ; }" Overwrite="true" Encoding="ASCII"/>
    <Exec Command="git add $(VersionFilePath)" />
    <FileUpdate Files="README.md" Regex="The most recent version is __.*__\." ReplacementText="The most recent version is __$(Version)__." />
    <Exec Command="git add README.md" />
    <Exec Command="git commit -m v$(Version)" />
  </Target>

  <Target Name="TagSource">
    <Exec Command="git tag v$(Version)" />
  </Target>

  <Target Name="PushSource">
    <Exec Command="git push $(OriginUrl) master v$(Version)" />
  </Target>

  <Target Name="Chocolatey" DependsOnTargets="CleanChocolateyTempDir; PushChocolateyPackage">
  </Target>

  <PropertyGroup>
    <ChocolateyBuildDir>$(SolutionDir)\tmp\choc</ChocolateyBuildDir>
    <ChocolateyTemplateDir>$(SolutionDir)\ChocolateyTemplates</ChocolateyTemplateDir>
    <ChocolateyNupkg>$(ChocolateyBuildDir)\gittfs.$(Version).nupkg</ChocolateyNupkg>
  </PropertyGroup>

  <ItemGroup>
    <ChocolateyTokens Include="PackageVersion">
      <ReplacementValue>$(Version)</ReplacementValue>
    </ChocolateyTokens>
    <ChocolateyTokens Include="DownloadUrl">
      <ReplacementValue>$(DownloadUrl)</ReplacementValue>
    </ChocolateyTokens>
    <!-- TemplateFile needs a full path, so we define the output files here so that MSBuild can resolve the paths. -->
    <ChocolateyNuspec        Include="$(ChocolateyBuildDir)\gittfs.nuspec" />
    <ChocolateyInstallScript Include="$(ChocolateyBuildDir)/tools/chocolateyInstall.ps1" />
  </ItemGroup>

  <Target Name="ChocolateyProperties">
    <Error Text="You should specify a version number! (/p:Version=X.Y.Z)" Condition="'$(Version)' == ''" />
    <Error Text="You should specify a download url! (/p:DownloadUrl=http://host/path/GitTfs-X.Y.Z.zip)" Condition="'$(DownloadUrl)' == ''" />
  </Target>

  <Target Name="CleanChocolateyTempDir">
    <RemoveDir Directories="$(ChocolateyBuildDir)" />
  </Target>

  <Target Name="ChocolateyTempDir">
    <MakeDir Directories="$(ChocolateyBuildDir)\tools" />
  </Target>

  <Target Name="ChocolateyNuspec" DependsOnTargets="ChocolateyProperties; MSBuildCommunityTasks; ChocolateyTempDir">
    <TemplateFile
      Template="$(ChocolateyTemplateDir)\gittfs.nuspec"
      OutputFilename="%(ChocolateyNuspec.FullPath)"
      Tokens="@(ChocolateyTokens)" />
  </Target>

  <Target Name="ChocolateyInstallScript" DependsOnTargets="ChocolateyProperties; MSBuildCommunityTasks; ChocolateyTempDir">
    <TemplateFile
      Template="$(ChocolateyTemplateDir)\chocolateyInstall.ps1"
      OutputFilename="%(ChocolateyInstallScript.FullPath)"
      Tokens="@(ChocolateyTokens)" />
  </Target>

  <Target Name="BuildChocolateyPackage" DependsOnTargets="ChocolateyNuspec; ChocolateyInstallScript">
    <Exec Command="cpack" WorkingDirectory="$(ChocolateyBuildDir)" />
  </Target>

  <Target Name="PushChocolateyPackage" DependsOnTargets="BuildChocolateyPackage">
    <Exec Command="cpush $(ChocolateyNupkg)" />
  </Target>

  <Target Name="GitHubRelease" DependsOnTargets="GitHubCreateRelease; GitHubUploadPackage; UpdateWebSite;">
  </Target>
  <!-- http://developer.github.com/v3/repos/releases/ -->
  <Target Name="GitHubCreateRelease">
    <Exec ConsoleToMSBuild="true" Command="curl -X POST $(Authentication) -H %22Content-Type: application/json%22 -d %22{ \%22tag_name\%22: \%22v$(Version)\%22, \%22name\%22: \%22v$(Version)\%22 }%22 https://api.github.com/repos/$(GitHubUser)/$(GitHubProject)/releases">
      <Output TaskParameter="ConsoleOutput" PropertyName="CreateReleaseOutput" />
    </Exec>
    <PropertyGroup>
      <IdString>$([System.Text.RegularExpressions.Regex]::Match($(CreateReleaseOutput), `"id": *(\d+),`))</IdString>
    </PropertyGroup>
    <PropertyGroup>
      <IdRelease>$([System.Text.RegularExpressions.Regex]::Match($(IdString), `\d+`))</IdRelease>
    </PropertyGroup>
    <Message Text="Id : $(IdRelease)"/>
    <Error Text="Fail to create a release!" Condition="'$(IdRelease)' == ''" />
  </Target>
  
  <Target Name="GitHubUploadPackage">
    <Exec Command="curl -X POST $(Authentication) -H %22Content-Type: application/zip%22 --data @$(Archive) https://uploads.github.com/repos/$(GitHubUser)/$(GitHubProject)/releases/$(IdRelease)/assets?name=$(PackageFile)" />
  </Target>
  
  <Target Name="UpdateWebSite">
    <Exec Command="git clone https://github.com/$(GitHubUser)/git-tfs.github.com.git" />
    <Exec Command="echo ^&lt;a href=%22https://github.com/git-tfs/git-tfs/releases/download/v$(Version)/$(PackageFile)%22 class=%22download-button%22^&gt;Download v$(Version)^&lt;/a^&gt; &gt; $(WebSiteDir)\_includes\download_button.html" />
    <Exec WorkingDirectory="$(WebSiteDir)" Command="git commit -a -m %22v$(Version)%22" />
    <Exec WorkingDirectory="$(WebSiteDir)" Command="git push origin master" />
    <CallTarget Targets="_CleanWebsiteFolder;" />
    <OnError ExecuteTargets="_CleanWebsiteFolder" />
  </Target>
  <Target Name="_CleanWebsiteFolder">
  <RemoveDir Directories="$(WebSiteDir)" />
  </Target>
  <Target Name="_DeleteRelease">
      <Exec Command="curl -X DELETE $(Authentication) https://api.github.com/repos/$(GitHubUser)/$(GitHubProject)/releases/$(IdRelease)" />
  </Target>
</Project>
